<UserControl x:Class="HengDa.LiZongMing.REAMS.Wpf.UC.UcHDZCQView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HengDa.LiZongMing.REAMS.Wpf.UC"
             xmlns:uc="clr-namespace:HengDa.LiZongMing.REAMS.Wpf.UC"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance uc:UcHDZCQViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="100"></ColumnDefinition>
            <ColumnDefinition Width="100"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="100"></RowDefinition>
        </Grid.RowDefinitions>
        <Canvas Grid.Row="0"  Grid.ColumnSpan="3">
            <Label Content="通讯方式" Width="70" Name="labSelCommMode" Style="{DynamicResource ContronSize1}" Canvas.Left="5" />
            <ComboBox x:Name="comComMode" Width="100"  Canvas.Left="0" ItemsSource="{Binding CommunicationMode}" SelectedValuePath="Value" DisplayMemberPath="Name" SelectedValue="{Binding CommunicationMode_Selected}" Style="{DynamicResource ContronSize1}"  Canvas.Top="2"><!--SelectionChanged="{s:Action LoadConfigAndConn}"-->
            </ComboBox>
            <Label Content="选择命令" Width="70" Name="labSelCmd" Style="{DynamicResource ContronSize1}" Canvas.Left="5" />
            <ComboBox x:Name="comCmds" Width="158"  Canvas.Left="72" ItemsSource="{Binding CmdCodeList}" SelectedValuePath="Value" DisplayMemberPath="Name" SelectedValue="{Binding CmdCode_Selected}" Style="{DynamicResource ContronSize1}" SelectionChanged="ComboBox_SelectionChanged" Canvas.Top="2">
            </ComboBox>
            <Label Width="80"  Canvas.Left="234" Style="{DynamicResource ContronSize1}" Name="labCmdParameter1" Canvas.Top="5">设置参数</Label>
            <ComboBox Width="73"  Canvas.Left="302" SelectedValue="{Binding CmdDatas}" SelectedValuePath="Tag"  Height="25" Name="comCaiYangData"  Style="{DynamicResource ContronSize1}" Canvas.Top="4">
                <ComboBoxItem Content="定量" Tag="00" Height="25"/>
                <ComboBoxItem Content="定时" Tag="01"  Height="25"/>
            </ComboBox>
            <TextBox Width="120" Height="23"  Canvas.Left="400" Name="tbCmdParameter1" Text="{Binding CmdParameter1}" Panel.ZIndex="2" Canvas.Top="4" ></TextBox>
            <Label Name="labCmdParameter2"  Canvas.Left="520" Width="80"  Style="{DynamicResource ContronSize1}" Panel.ZIndex="3" Canvas.Top="3" >参数2</Label>
            <TextBox Width="120" Height="23"  Canvas.Left="557" Name="tbCmdParameter2" Text="{Binding CmdParameter2}"  Panel.ZIndex="4" Canvas.Top="6" ></TextBox>
            <Button Width="100"  Canvas.Left="702" Command="{s:Action StartCmdExec}" HorizontalContentAlignment="Center" Style="{DynamicResource marginLeft}" Height="25" Name="btExcute" Canvas.Top="5" Content="{Binding ExcuteStateView}" FontSize="10pt"></Button>
            <TextBox Width="120" Height="23"  Canvas.Left="557" Name="tbTimeout" Text="{Binding service.WaitTimeout}"  Panel.ZIndex="4" Canvas.Top="6" ></TextBox>
            <CheckBox Name="chkAutoExcute" Canvas.Left="782"  IsChecked="{Binding AutoExcute}" Canvas.Top="9">连续执行</CheckBox>
        </Canvas>
        <DataGrid Grid.Column="0" Grid.Row="1" ItemsSource="{Binding MyDtoShow.Datas}" AutoGenerateColumns="False" IsReadOnly="True"  Grid.ColumnSpan="3" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="名称" Binding="{Binding Title}" Width="250" />
                <DataGridTextColumn Header="值" Binding="{Binding Value}" Width="400"/>
                <DataGridTextColumn Header="单位" Binding="{Binding UnitName}" Width="180"/>
            </DataGrid.Columns>
        </DataGrid>
        <TextBox Grid.Column="0" Grid.Row="2"  Text="{Binding MyDtoShow.Msg}"  Background="DarkGray" TextWrapping="Wrap" IsReadOnly="True" BorderThickness="0" FontSize="11pt" FontFamily="Microsoft YaHei UI" Foreground="White" ></TextBox>
        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1">
            <Label HorizontalAlignment="Center" FontSize="10pt">
                <Hyperlink Command="{s:Action DisConnectInstrument}">设备连接状态</Hyperlink>
            </Label>
            <Label Margin="10,10,10,10" Height="40" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="{Binding MacConnectedStatus}" Foreground="White">
                <Label.Resources>
                    <Style TargetType="Label">
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Content}" Value="已连接">
                                <Setter Property="Background" Value="Green"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Content}" Value="断开">
                                <Setter Property="Background" Value="Maroon"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Resources>
            </Label>
        </StackPanel>
        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="2">
            <Label HorizontalAlignment="Center" FontSize="10pt">
                <Hyperlink Command="{s:Action StopMqttServerListen}">MQTT监听</Hyperlink>
            </Label>
            <Label Margin="10,10,10,10" Height="40" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="{Binding MqttConnectedStatus}" Foreground="White">
                <Label.Resources>
                    <Style TargetType="Label">

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Content}" Value="连接中">
                                <Setter Property="Background" Value="Green"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Content}" Value="断开">
                                <Setter Property="Background" Value="Maroon"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Resources>
            </Label>
        </StackPanel>
    </Grid>
</UserControl>
