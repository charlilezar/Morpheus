//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成 by 明教主加强的代码生成模板( 作者 m8989@qq.com) 。
//     T4模板 + 阿明加强的代码生成模板
//  
//     对此文件的更改可能会导致不正确的行为。此外，如果重新生成代码，这些更改将会丢失。
//      所以如有修改的必要，建议建立 partial 类进行增加自己的代码
//                              或使用 #region 保留  功能说明  和 #endregion 来包围
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

using Volo.Abp.Application.Dtos;

using HengDa.LiZongMing.REAMS;
namespace HengDa.LiZongMing.REAMS.HVE.Dtos
{

    /// <summary>
    /// 高压电离状态 ListDto
    /// </summary>
    //[AutoMapFrom(typeof(HveRunStatus))]
public partial class HveRunStatusListDto : EntityDto<Guid>
    {
        #region 构造方法
        public HveRunStatusListDto()
        {
        }
        #endregion


        #region 基本属性

        // ///<summary>
        // /// Id
        // ///</summary>
        // [Display(Name = "Id", Order = 27)]
        // public virtual Guid Id { get; set; }


        ///<summary>
        /// 创建时间
        ///</summary>
        [Display(Name = "创建时间", Order = 28)]
        public virtual DateTime CreationTime { get; set; }


        ///<summary>
        /// 设备Id
        ///</summary>
        [Display(Name = "设备Id", Order = 29)]
        public virtual long DeviceId { get; set; }


        ///<summary>
        /// 系统状态
        ///</summary>
        [MaxLength(256)]
        [Display(Name = "系统状态", Order = 30)]
        public virtual string SystemStatus { get; set; }


        ///<summary>
        /// 数据库状态
        ///</summary>
        [MaxLength(256)]
        [Display(Name = "数据库状态", Order = 31)]
        public virtual string DatabaseStatus { get; set; }


        ///<summary>
        /// 外部电源
        ///</summary>
        [Display(Name = "外部电源", Order = 32)]
        public virtual bool ExternalPower { get; set; }


        ///<summary>
        /// 剂量率过高警报
        ///</summary>
        [Display(Name = "剂量率过高警报", Order = 33)]
        public virtual bool DoseRateHighAlarm { get; set; }


        ///<summary>
        /// 剂量率过低警报
        ///</summary>
        [Display(Name = "剂量率过低警报", Order = 34)]
        public virtual bool DoseRateLowAlarm { get; set; }


        ///<summary>
        /// 高电压过高
        ///</summary>
        [Display(Name = "高电压过高", Order = 35)]
        public virtual bool HighVoltageHigh { get; set; }


        ///<summary>
        /// 高电压过低
        ///</summary>
        [Display(Name = "高电压过低", Order = 36)]
        public virtual bool HighVoltageLow { get; set; }


        ///<summary>
        /// 电池电压过高
        ///</summary>
        [Display(Name = "电池电压过高", Order = 37)]
        public virtual bool BatteryVoltageHigh { get; set; }


        ///<summary>
        /// 电池电压过低
        ///</summary>
        [Display(Name = "电池电压过低", Order = 38)]
        public virtual bool BatteryVoltageLow { get; set; }


        ///<summary>
        /// 充电电流过高
        ///</summary>
        [Display(Name = "充电电流过高", Order = 39)]
        public virtual bool HighChargingCurrent { get; set; }


        ///<summary>
        /// 电池放电过快
        ///</summary>
        [Display(Name = "电池放电过快", Order = 40)]
        public virtual bool HighBatteryDischarge { get; set; }


        ///<summary>
        /// 电池温度过高
        ///</summary>
        [Display(Name = "电池温度过高", Order = 41)]
        public virtual bool HighBatteryTemperature { get; set; }


        ///<summary>
        /// 电池容量报警
        ///</summary>
        [Display(Name = "电池容量报警", Order = 42)]
        public virtual bool BatteryCapacityAlarm { get; set; }


        ///<summary>
        /// 数据库大小报警
        ///</summary>
        [Display(Name = "数据库大小报警", Order = 43)]
        public virtual bool DatabaseSizeWarning { get; set; }


        ///<summary>
        /// 剂量率过高警报值
        ///</summary>
        [Display(Name = "剂量率过高警报值", Order = 44)]
        public virtual decimal DoseRateHighAlarmValue { get; set; }


        ///<summary>
        /// 剂量率过低警报值
        ///</summary>
        [Display(Name = "剂量率过低警报值", Order = 45)]
        public virtual decimal DoseRateLowAlarmValue { get; set; }


        ///<summary>
        /// 高电压过高值
        ///</summary>
        [Display(Name = "高电压过高值", Order = 46)]
        public virtual decimal HighVoltageHighValue { get; set; }


        ///<summary>
        /// 高电压过低值
        ///</summary>
        [Display(Name = "高电压过低值", Order = 47)]
        public virtual decimal HighVoltageLowValue { get; set; }


        ///<summary>
        /// 电池电压过高值
        ///</summary>
        [Display(Name = "电池电压过高值", Order = 48)]
        public virtual decimal BatteryVoltageHighValue { get; set; }


        ///<summary>
        /// 电池电压过低值
        ///</summary>
        [Display(Name = "电池电压过低值", Order = 49)]
        public virtual decimal BatteryVoltageLowValue { get; set; }


        ///<summary>
        /// 状态更新时间
        ///</summary>
        [Display(Name = "状态更新时间", Order = 50)]
        public virtual DateTime? RunUpdateTime { get; set; }


        ///<summary>
        /// 警报更新时间
        ///</summary>
        [Display(Name = "警报更新时间", Order = 51)]
        public virtual DateTime? AlarmUpdateTime { get; set; }


        ///<summary>
        /// 多租户
        ///</summary>
        [Display(Name = "多租户", Order = 52)]
        public virtual Guid? TenantId { get; set; }


        #endregion

        #region 保留  手动添加属性

        #endregion

    }
}